name: Build and deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: pages
  cancel-in-progress: false
defaults:
  run:
    shell: bash
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DART_SASS_VERSION: 1.90.0
      GO_VERSION: 1.24.5
      HUGO_VERSION: 0.148.2
      NODE_VERSION: 22.18.0
      TZ: Europe/Oslo
    outputs:
      pages_base_url: ${{ steps.pages.outputs.base_url }}
      pages_base_path: ${{ steps.pages.outputs.base_path }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Create directory for user-specific executable files
        run: |
          mkdir -p "${HOME}/.local"
      - name: Install Dart Sass
        run: |
          curl -sLJO "https://github.com/sass/dart-sass/releases/download/${DART_SASS_VERSION}/dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz"
          tar -C "${HOME}/.local" -xf "dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz"
          rm "dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz"
          echo "${HOME}/.local/dart-sass" >> "${GITHUB_PATH}"
      - name: Install Hugo
        run: |
          curl -sLJO "https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz"
          mkdir "${HOME}/.local/hugo"
          tar -C "${HOME}/.local/hugo" -xf "hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz"
          rm "hugo_extended_${HUGO_VERSION}_linux-amd64.tar.gz"
          echo "${HOME}/.local/hugo" >> "${GITHUB_PATH}"
      - name: Verify installations
        run: |
          echo "Dart Sass: $(sass --version)"
          echo "Go: $(go version)"
          echo "Hugo: $(hugo version)"
          echo "Node.js: $(node --version)"
      - name: Install Node.js dependencies
        run: |
          [[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true
      - name: Configure Git
        run: |
          git config core.quotepath false
      - name: Cache restore
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: ${{ runner.temp }}/hugo_cache
          key: hugo-${{ github.run_id }}
          restore-keys:
            hugo-
      - name: Build the site
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/" \
            --cacheDir "${{ runner.temp }}/hugo_cache"
      - name: Cache save
        id: cache-save
        uses: actions/cache/save@v4
        with:
          path: ${{ runner.temp }}/hugo_cache
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}
      - name: Upload artifact for deploy job
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
      - name: Upload artifact for validate job
        uses: actions/upload-artifact@v4
        with:
          name: publish-dir
          path: ./public
  validate:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
          bundler-cache: true
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: publish-dir
          path: ./
      - name: Validate HTML and CSS
        uses: anishathalye/proof-html@v2
        with:
          directory: ./
          enforce_https: true
          ignore_empty_alt: true
          ignore_url_re: |
            ^foo$
          tokens: |
            {"https://github.com": "${{ secrets.GITHUB_TOKEN }}"}
          swap_urls: |
            ${{ format('{{ "^{0}" : "" }}', needs.build.outputs.pages_base_path) }}
      - name: Install libxml2-utils
        run: sudo apt-get install libxml2-utils
      - name: Verify that RSS and sitemap are valid XML
        run: |
          xmllint --noout ./index.xml
          xmllint --noout ./sitemap.xml
      - name: Download RSS schema
        run: wget https://raw.githubusercontent.com/jthelin/rss2schema/refs/heads/main/schema/rss-2_0.xsd
      - name: Validate RSS
        uses: ChristophWurst/xmllint-action@v1
        with:
          xml-file: ./index.xml
          xml-schema-file: ./rss-2_0.xsd
      - name: Download sitemap schema
        run: wget https://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd
      - name: Validate sitemap
        uses: ChristophWurst/xmllint-action@v1
        with:
          xml-file: ./sitemap.xml
          xml-schema-file: ./sitemap.xsd
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build, validate]
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
